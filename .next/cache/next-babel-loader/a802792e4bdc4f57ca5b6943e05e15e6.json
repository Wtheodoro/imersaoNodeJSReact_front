{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/walison/Code/imercao_react_node/site/pages/cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = event => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [event.target.name]: event.target.value\n  }));\n\n  const sendMeta = async event => {\n    event.preventDefault();\n    setResponse;\n\n    try {\n      const res = await fetch('http://localhost:8080/metas', {\n        method: 'POST',\n        body: JSON.stringify(meta),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: responseEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: 'sucess',\n          message: responseEnv.message\n        });\n      }\n    } catch (err) {\n      setResponse({\n        formSave: false,\n        type: 'error',\n        message: 'Erro: Meta nÃ£o cadastrada, tentar mais tarde.'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Minha Meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 42\n    }, this) : \"\", response.type === 'sucess' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: response.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 43\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Meta \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Aprender viol\\xE3o\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Vou aprender viol\\xE3o em 3 meses\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Pendente\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["/home/walison/Code/imercao_react_node/site/pages/cadastrar.js"],"names":["React","useState","Cadastrar","meta","setMeta","name","description","status","response","setResponse","formSave","type","message","onChangeInput","event","target","value","sendMeta","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nfunction Cadastrar() {\n\n    const [meta, setMeta] = useState({\n        name: '',\n        description: '',\n        status: '',\n    })\n\n    const [response, setResponse] = useState({\n        formSave: false,\n        type: '',\n        message: ''\n    })\n\n    const onChangeInput = event => setMeta({...meta, [event.target.name]: event.target.value})\n\n    const sendMeta = async event => {\n        event.preventDefault()\n        \n        setResponse\n        try{\n            const res = await fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {'Content-Type': 'application/json'}\n            })\n            const responseEnv = await res.json()\n            if (responseEnv.error) {\n                setResponse({\n                    formSave: false,\n                    type: 'error',\n                    message: responseEnv.message\n                })\n            } else {\n                setResponse({\n                    formSave: false,\n                    type: 'sucess',\n                    message: responseEnv.message\n                })\n            }\n        } catch (err) {\n            setResponse({\n                formSave: false,\n                type: 'error',\n                message: 'Erro: Meta nÃ£o cadastrada, tentar mais tarde.'\n            })\n        }\n    }\n\n    return (\n        <>\n            <h1>Cadastrar Minha Meta</h1>\n            <hr />\n\n            {response.type === 'error' ? <p>{response.message}</p> : \"\"}\n            {response.type === 'sucess' ? <p>{response.message}</p> : \"\"}\n\n            <form onSubmit={sendMeta}>\n                <label>Meta </label>\n                <input type=\"text\" name=\"name\" id=\"name\" \n                placeholder=\"Aprender violÃ£o\" \n                onChange={onChangeInput}/>\n                <br />\n\n                <label>DescriÃ§Ã£o </label>\n                <input type=\"text\" name=\"description\" id=\"description\" \n                placeholder=\"Vou aprender violÃ£o em 3 meses\" \n                onChange={onChangeInput}/>\n                <br />\n\n                <label>Status </label>\n                <input type=\"text\" name=\"status\" id=\"status\" \n                placeholder=\"Pendente\" \n                onChange={onChangeInput}/>\n                <br />\n\n                <button type=\"submit\">Cadastrar</button>\n\n            </form>\n        </>\n    )\n}\n\nexport default Cadastrar"]},"metadata":{},"sourceType":"module"}