{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/walison/Code/imercao_react_node/site/pages/cadastrar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Alert } from 'bootstrap';\nimport React, { useState } from 'react';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nfunction Cadastrar() {\n  const {\n    0: meta,\n    1: setMeta\n  } = useState({\n    name: '',\n    description: '',\n    status: ''\n  });\n  const {\n    0: response,\n    1: setResponse\n  } = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  });\n\n  const onChangeInput = event => setMeta(_objectSpread(_objectSpread({}, meta), {}, {\n    [event.target.name]: event.target.value\n  }));\n\n  const sendMeta = async event => {\n    event.preventDefault();\n    setResponse({\n      formSave: true\n    });\n\n    try {\n      const res = await fetch('http://localhost:8080/metas', {\n        method: 'POST',\n        body: JSON.stringify(meta),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const responseEnv = await res.json();\n\n      if (responseEnv.error) {\n        setResponse({\n          formSave: false,\n          type: 'error',\n          message: responseEnv.message\n        });\n      } else {\n        setResponse({\n          formSave: false,\n          type: 'sucess',\n          message: responseEnv.message\n        });\n      }\n    } catch (err) {\n      setResponse({\n        formSave: false,\n        type: 'error',\n        message: 'Erro: Meta n√£o cadastrada, tentar mais tarde.'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `.form {\n                        background-color: #171941;\n                        color: #bf38ac;\n                        padding-top: 30px;\n                        padding-bottom: 150px;\n                        margin-bottom: 0rem !important;\n                    }`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Cadastrar Minha Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 50\n        }, this) : \"\", response.type === 'sucess' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 51\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(FormGroup, {\n          onSubmit: sendMeta,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"name\",\n            children: \"Meta \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Aprender viol\\xE3o\",\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"description\",\n            children: \"Descri\\xE7\\xE3o \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"description\",\n            id: \"description\",\n            placeholder: \"Vou aprender viol\\xE3o em 3 meses\",\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            for: \"status\",\n            children: \"Status \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"status\",\n            id: \"status\",\n            placeholder: \"Pendente\",\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), response.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"danger\",\n            disabled: true,\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            outline: true,\n            color: \"primary\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nexport default Cadastrar;","map":{"version":3,"sources":["/home/walison/Code/imercao_react_node/site/pages/cadastrar.js"],"names":["Alert","React","useState","Jumbotron","Container","Button","Form","FormGroup","Label","Input","Cadastrar","meta","setMeta","name","description","status","response","setResponse","formSave","type","message","onChangeInput","event","target","value","sendMeta","preventDefault","res","fetch","method","body","JSON","stringify","headers","responseEnv","json","error","err"],"mappings":";;;;;;;;;;AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,IAAvC,EAA6CC,SAA7C,EAAwDC,KAAxD,EAA+DC,KAA/D,QAA4E,YAA5E;;AAEA,SAASC,SAAT,GAAqB;AAEjB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC;AAC7BW,IAAAA,IAAI,EAAE,EADuB;AAE7BC,IAAAA,WAAW,EAAE,EAFgB;AAG7BC,IAAAA,MAAM,EAAE;AAHqB,GAAD,CAAhC;AAMA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0Bf,QAAQ,CAAC;AACrCgB,IAAAA,QAAQ,EAAE,KAD2B;AAErCC,IAAAA,IAAI,EAAE,EAF+B;AAGrCC,IAAAA,OAAO,EAAE;AAH4B,GAAD,CAAxC;;AAMA,QAAMC,aAAa,GAAGC,KAAK,IAAIV,OAAO,iCAAKD,IAAL;AAAW,KAACW,KAAK,CAACC,MAAN,CAAaV,IAAd,GAAqBS,KAAK,CAACC,MAAN,CAAaC;AAA7C,KAAtC;;AAEA,QAAMC,QAAQ,GAAG,MAAMH,KAAN,IAAe;AAC5BA,IAAAA,KAAK,CAACI,cAAN;AAEAT,IAAAA,WAAW,CAAC;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAD,CAAX;;AAEA,QAAG;AACC,YAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACnDC,QAAAA,MAAM,EAAE,MAD2C;AAEnDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,IAAf,CAF6C;AAGnDsB,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB;AAH0C,OAAhC,CAAvB;AAKA,YAAMC,WAAW,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAA1B;;AACA,UAAID,WAAW,CAACE,KAAhB,EAAuB;AACnBnB,QAAAA,WAAW,CAAC;AACRC,UAAAA,QAAQ,EAAE,KADF;AAERC,UAAAA,IAAI,EAAE,OAFE;AAGRC,UAAAA,OAAO,EAAEc,WAAW,CAACd;AAHb,SAAD,CAAX;AAKH,OAND,MAMO;AACHH,QAAAA,WAAW,CAAC;AACRC,UAAAA,QAAQ,EAAE,KADF;AAERC,UAAAA,IAAI,EAAE,QAFE;AAGRC,UAAAA,OAAO,EAAEc,WAAW,CAACd;AAHb,SAAD,CAAX;AAKH;AACJ,KApBD,CAoBE,OAAOiB,GAAP,EAAY;AACVpB,MAAAA,WAAW,CAAC;AACRC,QAAAA,QAAQ,EAAE,KADF;AAERC,QAAAA,IAAI,EAAE,OAFE;AAGRC,QAAAA,OAAO,EAAE;AAHD,OAAD,CAAX;AAKH;AACJ,GAhCD;;AAkCA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,MAA3B;AAAA,8BACI;AAAA,kBACM;AACtB;AACA;AACA;AACA;AACA;AACA;AAPgB;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,SAAD;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAIKJ,QAAQ,CAACG,IAAT,KAAkB,OAAlB,gBAA4B,QAAC,KAAD;AAAA,oBAAQH,QAAQ,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAA5B,GAAgE,EAJrE,EAKKJ,QAAQ,CAACG,IAAT,KAAkB,QAAlB,gBAA6B;AAAA,oBAAIH,QAAQ,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,gBAA7B,GAAyD,EAL9D,eAOI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAEK,QAArB;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,EAAE,EAAC,MAAlC;AACA,YAAA,WAAW,EAAC,oBADZ;AAEA,YAAA,QAAQ,EAAEJ;AAFV;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAOI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,aAAxB;AAAsC,YAAA,EAAE,EAAC,aAAzC;AACA,YAAA,WAAW,EAAC,mCADZ;AAEA,YAAA,QAAQ,EAAEA;AAFV;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAWI,QAAC,KAAD;AAAO,YAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAYI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,QAAxB;AAAiC,YAAA,EAAE,EAAC,QAApC;AACA,YAAA,WAAW,EAAC,UADZ;AAEA,YAAA,QAAQ,EAAEA;AAFV;AAAA;AAAA;AAAA;AAAA,kBAZJ,eAeI;AAAA;AAAA;AAAA;AAAA,kBAfJ,EAiBKL,QAAQ,CAACE,QAAT,gBACD,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,QAA5B;AAAoC,YAAA,QAAQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADC,gBAED,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,MAA7B;AAA8B,YAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA8CH;;AAED,eAAeR,SAAf","sourcesContent":["import { Alert } from 'bootstrap'\nimport React, { useState } from 'react'\n\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input } from 'reactstrap'\n\nfunction Cadastrar() {\n\n    const [meta, setMeta] = useState({\n        name: '',\n        description: '',\n        status: '',\n    })\n\n    const [response, setResponse] = useState({\n        formSave: false,\n        type: '',\n        message: ''\n    })\n\n    const onChangeInput = event => setMeta({...meta, [event.target.name]: event.target.value})\n\n    const sendMeta = async event => {\n        event.preventDefault()\n        \n        setResponse({formSave: true})\n\n        try{\n            const res = await fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {'Content-Type': 'application/json'}\n            })\n            const responseEnv = await res.json()\n            if (responseEnv.error) {\n                setResponse({\n                    formSave: false,\n                    type: 'error',\n                    message: responseEnv.message\n                })\n            } else {\n                setResponse({\n                    formSave: false,\n                    type: 'sucess',\n                    message: responseEnv.message\n                })\n            }\n        } catch (err) {\n            setResponse({\n                formSave: false,\n                type: 'error',\n                message: 'Erro: Meta n√£o cadastrada, tentar mais tarde.'\n            })\n        }\n    }\n\n    return (\n        <>\n            <Jumbotron fluid className=\"form\">\n                <style>\n                    {`.form {\n                        background-color: #171941;\n                        color: #bf38ac;\n                        padding-top: 30px;\n                        padding-bottom: 150px;\n                        margin-bottom: 0rem !important;\n                    }`}\n                </style>\n                <Container>\n                    <h1 className=\"display-4 text-center\">Cadastrar Minha Meta</h1>\n                    <hr />\n\n                    {response.type === 'error' ? <Alert>{response.message}</Alert> : \"\"}\n                    {response.type === 'sucess' ? <p>{response.message}</p> : \"\"}\n\n                    <FormGroup onSubmit={sendMeta}>\n                        <Label for=\"name\">Meta </Label>\n                        <Input type=\"text\" name=\"name\" id=\"name\" \n                        placeholder=\"Aprender viol√£o\" \n                        onChange={onChangeInput}/>\n\n                        <Label for=\"description\">Descri√ß√£o </Label>\n                        <Input type=\"text\" name=\"description\" id=\"description\" \n                        placeholder=\"Vou aprender viol√£o em 3 meses\" \n                        onChange={onChangeInput}/>\n\n                        <Label for=\"status\">Status </Label>\n                        <Input type=\"text\" name=\"status\" id=\"status\" \n                        placeholder=\"Pendente\" \n                        onChange={onChangeInput}/>\n                        <br />\n\n                        {response.formSave ? \n                        <Button type=\"submit\" color=\"danger\"disabled>Enviando...</Button> :\n                        <Button type=\"submit\" outline color=\"primary\">Cadastrar</Button>\n                        }\n\n                    </FormGroup>\n                </Container>\n            </Jumbotron>\n        </>\n    )\n}\n\nexport default Cadastrar"]},"metadata":{},"sourceType":"module"}