{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/walison/Code/imercao_react_node/site/pages/cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var onChangeInput = function onChangeInput(event) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var res, responseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return res.json();\n\n            case 7:\n              responseEnv = _context.sent;\n\n              if (responseEnv.error) {\n                console.log(responseEnv.message);\n                setResponse();\n                console.log(responseEnv.message);\n              } else {\n                console.log(responseEnv.message);\n              }\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('Erro: Meta nÃ£o cadastrada, tentar mais tarde.');\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 11]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastrar Minha Meta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMeta,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Meta \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        placeholder: \"Aprender viol\\xE3o\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Descri\\xE7\\xE3o \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        id: \"description\",\n        placeholder: \"Vou aprender viol\\xE3o em 3 meses\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Status \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        id: \"status\",\n        placeholder: \"Pendente\",\n        onChange: onChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Cadastrar, \"n/JpD+xwq8wKbpWkIA11r/yngFc=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["/home/walison/Code/imercao_react_node/site/pages/cadastrar.js"],"names":["React","useState","Cadastrar","name","description","status","meta","setMeta","formSave","type","message","response","setResponse","onChangeInput","event","target","value","sendMeta","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","responseEnv","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nfunction Cadastrar() {\n\n    const [meta, setMeta] = useState({\n        name: '',\n        description: '',\n        status: '',\n    })\n\n    const [response, setResponse] = useState({\n        formSave: false,\n        type: '',\n        message: ''\n    })\n\n    const onChangeInput = event => setMeta({...meta, [event.target.name]: event.target.value})\n\n    const sendMeta = async event => {\n        event.preventDefault()\n        \n        try{\n            const res = await fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {'Content-Type': 'application/json'}\n            })\n            const responseEnv = await res.json()\n            if (responseEnv.error) {\n                console.log(responseEnv.message)\n                setResponse()\n                console.log(responseEnv.message)\n            } else {\n                console.log(responseEnv.message)\n            }\n        } catch (err) {\n            console.log('Erro: Meta nÃ£o cadastrada, tentar mais tarde.')\n        }\n    }\n\n    return (\n        <>\n            <h1>Cadastrar Minha Meta</h1>\n            <hr />\n\n            <form onSubmit={sendMeta}>\n                <label>Meta </label>\n                <input type=\"text\" name=\"name\" id=\"name\" \n                placeholder=\"Aprender violÃ£o\" \n                onChange={onChangeInput}/>\n                <br />\n\n                <label>DescriÃ§Ã£o </label>\n                <input type=\"text\" name=\"description\" id=\"description\" \n                placeholder=\"Vou aprender violÃ£o em 3 meses\" \n                onChange={onChangeInput}/>\n                <br />\n\n                <label>Status </label>\n                <input type=\"text\" name=\"status\" id=\"status\" \n                placeholder=\"Pendente\" \n                onChange={onChangeInput}/>\n                <br />\n\n                <button type=\"submit\">Cadastrar</button>\n\n            </form>\n        </>\n    )\n}\n\nexport default Cadastrar"]},"metadata":{},"sourceType":"module"}