{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/walison/Code/imercao_react_node/site/pages/cadastrar.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nfunction Cadastrar() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    description: '',\n    status: ''\n  }),\n      meta = _useState[0],\n      setMeta = _useState[1];\n\n  var _useState2 = useState({\n    formSave: false,\n    type: '',\n    message: ''\n  }),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  var onChangeInput = function onChangeInput(event) {\n    return setMeta(_objectSpread(_objectSpread({}, meta), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var sendMeta = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var res, responseEnv;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setResponse({\n                formSave: true\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 5:\n              res = _context.sent;\n              _context.next = 8;\n              return res.json();\n\n            case 8:\n              responseEnv = _context.sent;\n\n              if (responseEnv.error) {\n                setResponse({\n                  formSave: false,\n                  type: 'error',\n                  message: responseEnv.message\n                });\n              } else {\n                setResponse({\n                  formSave: false,\n                  type: 'sucess',\n                  message: responseEnv.message\n                });\n              }\n\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              setResponse({\n                formSave: false,\n                type: 'error',\n                message: 'Erro: Meta nÃ£o cadastrada, tentar mais tarde.'\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 12]]);\n    }));\n\n    return function sendMeta(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: \".form {\\n                        background-color: #171941;\\n                        color: #bf38ac;\\n                        padding-top: 30px;\\n                        padding-bottom: 150px;\\n                        margin-bottom: 0rem !important;\\n                    }\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"display-4 text-center\",\n          children: \"Cadastrar Minha Meta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), response.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 50\n        }, this) : \"\", response.type === 'sucess' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: response.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 51\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: sendMeta,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            \"for\": \"name\",\n            children: \"Meta \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Aprender viol\\xE3o\",\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            children: \"Descri\\xE7\\xE3o \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            id: \"description\",\n            placeholder: \"Vou aprender viol\\xE3o em 3 meses\",\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"status\",\n            id: \"status\",\n            placeholder: \"Pendente\",\n            onChange: onChangeInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), response.formSave ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: true,\n            children: \"Enviando...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Cadastrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Cadastrar, \"n/JpD+xwq8wKbpWkIA11r/yngFc=\");\n\n_c = Cadastrar;\nexport default Cadastrar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastrar\");","map":{"version":3,"sources":["/home/walison/Code/imercao_react_node/site/pages/cadastrar.js"],"names":["React","useState","Jumbotron","Container","Button","Form","FormGroup","Label","Input","FormText","Cadastrar","name","description","status","meta","setMeta","formSave","type","message","response","setResponse","onChangeInput","event","target","value","sendMeta","preventDefault","fetch","method","body","JSON","stringify","headers","res","json","responseEnv","error"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { Jumbotron, Container, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap'\n\nfunction Cadastrar() {\n\n    const [meta, setMeta] = useState({\n        name: '',\n        description: '',\n        status: '',\n    })\n\n    const [response, setResponse] = useState({\n        formSave: false,\n        type: '',\n        message: ''\n    })\n\n    const onChangeInput = event => setMeta({...meta, [event.target.name]: event.target.value})\n\n    const sendMeta = async event => {\n        event.preventDefault()\n        \n        setResponse({formSave: true})\n\n        try{\n            const res = await fetch('http://localhost:8080/metas', {\n                method: 'POST',\n                body: JSON.stringify(meta),\n                headers: {'Content-Type': 'application/json'}\n            })\n            const responseEnv = await res.json()\n            if (responseEnv.error) {\n                setResponse({\n                    formSave: false,\n                    type: 'error',\n                    message: responseEnv.message\n                })\n            } else {\n                setResponse({\n                    formSave: false,\n                    type: 'sucess',\n                    message: responseEnv.message\n                })\n            }\n        } catch (err) {\n            setResponse({\n                formSave: false,\n                type: 'error',\n                message: 'Erro: Meta nÃ£o cadastrada, tentar mais tarde.'\n            })\n        }\n    }\n\n    return (\n        <>\n            <Jumbotron fluid className=\"form\">\n                <style>\n                    {`.form {\n                        background-color: #171941;\n                        color: #bf38ac;\n                        padding-top: 30px;\n                        padding-bottom: 150px;\n                        margin-bottom: 0rem !important;\n                    }`}\n                </style>\n                <Container>\n                    <h1 className=\"display-4 text-center\">Cadastrar Minha Meta</h1>\n                    <hr />\n\n                    {response.type === 'error' ? <p>{response.message}</p> : \"\"}\n                    {response.type === 'sucess' ? <p>{response.message}</p> : \"\"}\n\n                    <Form onSubmit={sendMeta}>\n                        <Label for=\"name\">Meta </Label>\n                        <Input type=\"text\" name=\"name\" id=\"name\" \n                        placeholder=\"Aprender violÃ£o\" \n                        onChange={onChangeInput}/>\n\n                        <Label>DescriÃ§Ã£o </Label>\n                        <input type=\"text\" name=\"description\" id=\"description\" \n                        placeholder=\"Vou aprender violÃ£o em 3 meses\" \n                        onChange={onChangeInput}/>\n                        <br />\n\n                        <label>Status </label>\n                        <input type=\"text\" name=\"status\" id=\"status\" \n                        placeholder=\"Pendente\" \n                        onChange={onChangeInput}/>\n                        <br />\n\n                        {response.formSave ? \n                        <button type=\"submit\" disabled>Enviando...</button> :\n                        <button type=\"submit\">Cadastrar</button>\n                        }\n\n                    </Form>\n                </Container>\n            </Jumbotron>\n        </>\n    )\n}\n\nexport default Cadastrar"]},"metadata":{},"sourceType":"module"}